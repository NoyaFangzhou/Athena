//
//  UserPoolSignUpViewController.swift
//  MySampleApp
//
//
// Copyright 2017 Amazon.com, Inc. or its affiliates (Amazon). All Rights Reserved.
//
// Code generated by AWS Mobile Hub. Amazon gives unlimited permission to 
// copy, distribute and modify it.
//
// Source code generated from template: aws-my-sample-app-ios-swift v0.12
// http://stackoverflow.com/questions/32427823/combobox-component-for-swift-failed-with-downpicker
//

import Foundation
import UIKit
import AWSMobileHubHelper
import AWSCognitoIdentityProvider
import DownPicker

class UserPoolSignUpViewController: ATHBaseViewController, ATHInputViewDelegate, ATHFootViewDelegate {
    
    var pool: AWSCognitoIdentityUserPool?
    var sentTo: String?
    
    var username: String!
    var password: String!
    var email: String!
    var language: String!
    var confirm: String!
    
    @IBOutlet weak var scrollView: UIScrollView!
    
    override func viewDidLoad() {
        super.viewDidLoad()
        // Add header
        let header = ATHHeadView(frame: CGRect(x: 0.0, y: STATUS_BAR_HEIGHT, width: Double(SCREEN_WIDTH), height: NAVIGATION_BAR_HEIGHT), title: "Sign Up", left: ATHHeaderItemType.ATHReturn, right: ATHHeaderItemType.ATHNULL)
        
        let username = ATHInputView(frame: CGRect(x: 0.0, y: 0, width: SCREEN_WIDTH, height: 80), title: "Username", titleColor: PLACEHOLDER_COLOR, textColor: UIColor.white, type: ATHInputStyle.ATHNormal, placeholder: "Please Input your username")
        username.delegate = self
        self.scrollView.addSubview(username)
        //        VIEWBORDER(view: username, color: UIColor.orange, width: 2.0)
        let email  = ATHInputView(frame: CGRect(x: 0.0, y: username.y+username.height+5, width: SCREEN_WIDTH, height: 80), title: "Email Address", titleColor: PLACEHOLDER_COLOR, textColor: UIColor.white, type: ATHInputStyle.ATHEmail, placeholder: "Please Input your email address")
        email.delegate = self
        self.scrollView.addSubview(email)
        //        VIEWBORDER(view: email, color: UIColor.orange, width: 2.0)
        let language  = ATHInputView(frame: CGRect(x: 0.0, y: email.y+email.height+5, width: SCREEN_WIDTH, height: 80), title: "Native Language", titleColor: PLACEHOLDER_COLOR, textColor: UIColor.white, type: ATHInputStyle.ATHLanguage, placeholder: "Please Select your Native Language")
        language.delegate = self
        self.scrollView.addSubview(language)
        //        VIEWBORDER(view: language, color: UIColor.orange, width: 2.0)
        let password  = ATHInputView(frame: CGRect(x: 0.0, y: language.y+language.height+15, width: SCREEN_WIDTH, height: 80), title: "Password", titleColor: PLACEHOLDER_COLOR, textColor: UIColor.white, type: ATHInputStyle.ATHPassword, placeholder: "Please Input your password")
        password.delegate = self
        self.scrollView.addSubview(password)
        //        VIEWBORDER(view: password, color: UIColor.orange, width: 2.0)
        let confirm_pwd  = ATHInputView(frame: CGRect(x: 0.0, y: password.y+password.height+5, width: SCREEN_WIDTH, height: 80), title: "Confirm Password", titleColor: PLACEHOLDER_COLOR, textColor: UIColor.white, type: ATHInputStyle.ATHPassword, placeholder: "Please Input your password again")
        confirm_pwd.delegate = self
        self.scrollView.addSubview(confirm_pwd)
        //        VIEWBORDER(view: confirm_pwd, color: UIColor.orange, width: 2.0)
        let next = ATHLogButton(frame: CGRect(x: 25, y: confirm_pwd.y+confirm_pwd.height+50, width: SCREEN_WIDTH-50, height: 40), title: "Next", bgcolor: BTN_BACKGROUND_COLOR)
        next.addTarget(self, action: #selector(self.next(_:)), for: .touchUpInside)
        self.scrollView.addSubview(next)
        
        
        // Add footer
        let footer = ATHFootView(frame: CGRect(x: 0, y: SCREEN_HEIGHT-44-header.y-header.height, width: SCREEN_WIDTH, height: 44), label: "Aleady have an account?", btntitle: "Sign In")
        //        VIEWBORDER(view: footer, color: UIColor.cyan, width: 2.0)
        footer.delegate = self
        self.scrollView.addSubview(footer)
        self.view.addSubview(header)

        self.pool = AWSCognitoIdentityUserPool.init(forKey: AWSCognitoUserPoolsSignInProviderKey)
        
        
    }
    
//    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
//        if let signUpConfirmationViewController = segue.destination as? UserPoolSignUpConfirmationViewController {
//            signUpConfirmationViewController.sentTo = self.sentTo
//            signUpConfirmationViewController.user = self.pool?.getUser(self.userName.text!)
//        }
//    }
    
    @IBAction func onSignUp(_ sender: AnyObject) {

            }
    
    
    // MARK: Next Botton Clicked
    func next(_ sender: UIButton) {
        print("\(sender.titleLabel?.text)")
        guard let userNameValue = self.username, !userNameValue.isEmpty,
            let passwordValue = self.password, !passwordValue.isEmpty else {
                UIAlertView(title: "Missing Required Fields",
                            message: "Username / Password are required for registration.",
                            delegate: nil,
                            cancelButtonTitle: "Ok").show()
                return
        }
        
        var attributes = [AWSCognitoIdentityUserAttributeType]()
        
        if let emailValue = self.email, !emailValue.isEmpty {
            let email = AWSCognitoIdentityUserAttributeType()
            email?.name = "email"
            email?.value = emailValue
            attributes.append(email!)
        }
        
        if let languageValue = self.language, !languageValue.isEmpty {
            let profile = AWSCognitoIdentityUserAttributeType()
            profile?.name = "profile"
            profile?.value = "{\"language\": \"\(languageValue)\"}"
            attributes.append(profile!)
        }
        
        
        if let languageValue = self.language, !languageValue.isEmpty {
            print("\n\n\(self.language)\n\n")
            let language = AWSCognitoIdentityUserAttributeType()
            language?.name = "custom:language"
            language?.value = languageValue
            attributes.append(language!)
        }
        
        //        sign up the user
        self.pool?.signUp(userNameValue, password: passwordValue, userAttributes: attributes, validationData: nil).continueWith {[weak self] (task: AWSTask<AWSCognitoIdentityUserPoolSignUpResponse>) -> AnyObject? in
            guard let strongSelf = self else { return nil }
            DispatchQueue.main.async(execute: {
                if let error = task.error as? NSError {
                    UIAlertView(title: error.userInfo["__type"] as? String,
                                message: error.userInfo["message"] as? String,
                                delegate: nil,
                                cancelButtonTitle: "Ok").show()
                    return
                }
                
                if let result = task.result as AWSCognitoIdentityUserPoolSignUpResponse! {
                    // handle the case where user has to confirm his identity via email / SMS
                    if (result.user.confirmedStatus != AWSCognitoIdentityUserStatus.confirmed) {
                        strongSelf.sentTo = result.codeDeliveryDetails?.destination
                        strongSelf.performSegue(withIdentifier: "SignUpConfirmSegue", sender:sender)
                    } else {
                        UIAlertView(title: "Registration Complete",
                                    message: "Registration was successful.",
                                    delegate: nil,
                                    cancelButtonTitle: "Ok").show()
                        _ = strongSelf.navigationController?.popToRootViewController(animated: true)
                    }
                }
                
            })
            return nil
        }

    }
    
    // MARK: ATHInputViewDelegate
    func keyboardAppear(_ offset: Double) {
        print("Offset up \(offset)")
        self.scrollView.contentOffset = CGPoint(x: 0.0, y: offset)
    }
    
    func keyboardDisappear(_ text: String, _ type: ATHInputStyle) {
        print("Offset down")
        self.scrollView.contentOffset = CGPoint(x: 0.0, y: 0.0)
        switch type {
        case ATHInputStyle.ATHEmail:
            self.email = text
            break
        case ATHInputStyle.ATHPassword:
            self.password = text
            break
        case ATHInputStyle.ATHNormal:
            self.username = text
            break
        case ATHInputStyle.ATHLanguage:
            self.language = text
            break
        default:
            self.confirm = text
        }
    }
    
    
    // MARK: ATHFootViewDelegate
    func sign_up(_ sender: UIButton) {
        print("\(sender.titleLabel?.text)")
        let storyboard = UIStoryboard(name: "SignIn", bundle: Bundle.main)
        let viewController : UIViewController = storyboard.instantiateViewController(withIdentifier: "SignInViewController") as UIViewController
        present(viewController, animated: true, completion: nil);
    }

}
